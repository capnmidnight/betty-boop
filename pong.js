function LoospObject(){this.typeChain = ["LoospObject"]; if(!this.__proto__.getType) this.__proto__.getType = function getType(){return this.typeChain[0]; }; }
 var PLAY_WIDTH = 800;
        var PLAY_HEIGHT = 400;
        var LINE_WIDTH = 10;
        var PADDLE_LENGTH = 100;
        var p1 = null;
        var p2 = null;
        var ball = null;
        var timer = null;
        var lastFrame = null;
        var startButton = null;
        var statusBox = null;
        var state = null;
        var AI_STEP = 5;

        function Rect(x,y,width,height){LoospObject.call(this); this.typeChain.unshift("Rect");var board = document.getElementById("board"); this.x = x; this.y = y; this.width = width; this.height = height; this.elem = document.createElement("div"); board.appendChild(this.elem); elem.style.position = "absolute"; elem.style.padding = "0"; elem.style.backgroundColor = "#00ff00"; elem.style.top = (this.y + "px"); elem.style.left = (this.x + "px"); elem.style.width = (this.width + "px"); elem.style.height = (this.height + "px"); }Rect.prototype = Object.create(LoospObject.prototype);
/*
        function Player(scoreDisplay,x,y,width,height){var base = function(){Rect.apply(this, Array.prototype.slice.call(arguments)); this.typeChain.unshift("Player");}.bind(this);base(x,y,width,height); this.startY = y; this.score = 0; this.scoreDisplay = scoreDisplay; if(!this.__proto__.reset) this.__proto__.reset = function reset(){this.moveTo(this.startY); this.score = 0; return this.scoreDisplay.innerHTML = this.score; }; if(!this.__proto__.moveTo) this.__proto__.moveTo = function moveTo(y){this.y = y; (function(){var _ret; if((this.y > (PLAY_HEIGHT - PADDLE_LENGTH))){_ret = this.y = (PLAY_HEIGHT - PADDLE_LENGTH);}else{_ret = (function(){var _ret; if((this.y < 0)){_ret = this.y = 0;} return _ret;})();} return _ret;})(); return this.elem.style.top = (Math.floor(this.y) + "px"); }; if(!this.__proto__.scored) this.__proto__.scored = function scored(){this.score = (1 + this.score); return this.scoreDisplay.innerHTML = this.score; }; if(!this.__proto__.AI) this.__proto__.AI = function AI(ball){return (function(){var _ret; if((ball.dx > 0)){_ret = (function(){var _ret; if((ball.y > ((this.y + this.height) - LINE_WIDTH))){_ret = this.moveTo((1 + this.y));}else{_ret = (function(){var _ret; if((ball.y < this.y)){_ret = this.moveTo((this.y - 1));} return _ret;})();} return _ret;})();} return _ret;})(); }; if(!this.__proto__.intersect) this.__proto__.intersect = function intersect(ball){return (((ball.x + ball.width) >= this.x)&&(ball.x < (this.x + this.width))&&((ball.y + ball.height) >= this.y)&&(ball.y < (this.y + this.height))); }; if(!this.__proto__.bounce) this.__proto__.bounce = function bounce(ball){var good = false; (function(){var _ret; if(this.intersect(ball)){ball.dx = (ball.dx * -1.1); var dy = ((this.y - ball.y) + (0.5 * (this.height - ball.height))); ball.dy = (ball.dy - (dy * 0.003003003003003003003003003003)); _ret = good = true;} return _ret;})(); return good; }; }Player.prototype = Object.create(Rect.prototype);

        function Ball(width,height){var base = function(){Rect.apply(this, Array.prototype.slice.call(arguments)); this.typeChain.unshift("Ball");}.bind(this);base(-1000,0,width,height); this.dx = 0; this.dy = 0; if(!this.__proto__.drop) this.__proto__.drop = function drop(direction,speed){this.x = -100; this.y = 0; this.display(); this.x = (0.5 * (PLAY_WIDTH - LINE_WIDTH)); this.y = (0.5 * (PLAY_HEIGHT - LINE_WIDTH)); var vel = (0.2 + (0.0375 * speed)); var angle = (((Math.random() * 2) - 1) * Math.PI * 0.25); this.dx = (direction * Math.cos(angle) * vel); return this.dy = (Math.sin(angle) * vel); }; if(!this.__proto__.display) this.__proto__.display = function display(){this.elem.style.top = (Math.floor(this.y) + "px"); return this.elem.style.left = (Math.floor(this.x) + "px"); }; if(!this.__proto__.advance) this.__proto__.advance = function advance(){this.x = (this.x + this.dx); return this.y = (this.y + this.dy); }; if(!this.__proto__.bounced) this.__proto__.bounced = function bounced(p1,p2,maxY){var good = false; (function(){var _ret; if(((this.y < 0)||(this.y >= maxY))){this.dy = (this.dy * -1); _ret = good = true;} return _ret;})(); return good = (good||p1.bounce(this)||p2.bounce(this)); }; }Ball.prototype = Object.create(Rect.prototype);

        function prePlay(delta){(function(){var _ret; if((delta < 1000)){_ret = statusBox.innerHTML = "Ready...";}else{_ret = (function(){var _ret; if((delta < 2000)){_ret = statusBox.innerHTML = "Set...";}else{_ret = (function(){var _ret; if((delta < 3000)){_ret = statusBox.innerHTML = "GO!";}else{_ret = (function(){statusBox.style.display = "none"; return state = updateGame;})();} return _ret;})();} return _ret;})();} return _ret;})(); return (delta >= 3000); }

        function updateGame(delta){var i = 0; while(((i < delta)&&(state==updateGame))){ball.advance(); (function(){var _ret; if(!(ball.bounced(p1,p2,(PLAY_HEIGHT - LINE_WIDTH)))){var scoringPlayer = null; (function(){var _ret; if((ball.x < p1.x)){_ret = scoringPlayer = p2;}else{_ret = (function(){var _ret; if((ball.x > p2.x)){_ret = scoringPlayer = p1;} return _ret;})();} return _ret;})(); _ret = (function(){var _ret; if(!((scoringPlayer==null))){_ret = (function(){scoringPlayer.scored(); ball.drop((((scoringPlayer==p1)&&1)||-1),(p1.score + p2.score)); return statusBox.style.display = "block";})();}else{_ret = (function(){var _ret; if((scoringPlayer.score < 5)){_ret = state = prePlay;}else{_ret = state = gameOver;} return _ret;})();} return _ret;})();} return _ret;})(); i = (1 + i);}; (function(){var _ret; if((state==updateGame)){i = 0; while((i < delta)){p2.AI(ball); i = (i + AI_STEP);}; ball.display(); _ret = true;} return _ret;})(); function gameOver(delta){var ret = false; (function(){var _ret; if((delta < 3000)){_ret = statusBox.innerHTML = "Game Over";}else{_ret = (function(){clearInterval(timer); statusBox.style.display = "none"; startButton.style.display = "block"; p1.reset(); p2.reset(); state = titleScreen; return ret = true;})();} return _ret;})(); return ret; }; function timerTick(){var currentFrame = new Date().getTime(); var delta = (currentFrame - lastFrame); return (function(){var _ret; if(state(delta)){_ret = lastFrame = currentFrame;} return _ret;})(); }; function start(){startButton.style.display = "none"; statusBox.style.display = "block"; lastFrame = new Date().getTime(); ball.drop(1,0); state = prePlay; return timer = setInterval(timerTick,33); }; startButton = document.getElementById("start"); startButton.addEventListener("click",start); statusBox = document.getElementById("status"); ball = new BallLINE_WIDTH(LINE_WIDTH)(); p1 = new Player(document.getElementById("score1"),LINE_WIDTH,(0.5 * (PLAY_HEIGHT - PADDLE_LENGTH)),LINE_WIDTH,PADDLE_LENGTH); p2 = new Player(document.getElementById("score2"),LINE_WIDTH,(0.5 * (PLAY_HEIGHT - PADDLE_LENGTH)),LINE_WIDTH,PADDLE_LENGTH); return document.addEventListener("mousemove",function (evt){return p1.moveTo((evt.clientY - (0.5 * PADDLE_LENGTH))); }); }*/